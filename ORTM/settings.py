"""
Django settings for ORTM project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Charger les variables depuis .env
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@-7y)_*+z33e2sp&u@5gt$@y5ryq@&&er9)x3$hb-p0pr&^xh7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Accounts',
    'Administrateur',
    'Employee',
    'Manager',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ORTM.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ORTM.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'fr-fr'

TIME_ZONE = 'UTC+3'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static']

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field



DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# AUTH_USER_MODEL = 'Administrateur.CustomUser'
AUTH_USER_MODEL = 'Administrateur.UserAccount'



AUTHENTICATION_BACKENDS = [
    'Administrateur.authentication.UserAccountBackend',
    'django.contrib.auth.backends.ModelBackend',
]
#LOGIN_URL = 'index/'  # ou une autre URL si vous la personnalisez
LOGIN_URL = '/Accounts/login_user/'  # URL pour rediriger les utilisateurs non connectés
# LOGIN_REDIRECT_URL = '/Accounts/dashboard_user/'  # Tableau de bord utilisateur
# LOGOUT_REDIRECT_URL = '/'  # Page d'accueil après déconnexion


#Modification connexion utilisateur simultanément
# Durée de la session (exemple : 1 jour)
SESSION_COOKIE_AGE = 86400  # 24 heures en secondes

# Garder la session active même si le navigateur est fermé
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  

# Utilisation des sessions côté base de données
SESSION_ENGINE = "django.contrib.sessions.backends.db"

SESSION_SAVE_EVERY_REQUEST = True  # Sauvegarder la session à chaque requête pour éviter la déconnexion

SESSION_COOKIE_NAME = "sessionid" #changer le nom du cookie pour éviter l'écrasement
# SESSION_COOKIE_NAME = "sessionid_multi" #changer le nom du cookie pour éviter l'écrasement

# Modification connexion simultanée
CSRF_COOKIE_SECURE = False  # Mettre True en production si HTTPS est activé
SESSION_COOKIE_SECURE = False  # Idem
CSRF_USE_SESSIONS = True



# pour l'option mot de passe oublié

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Serveur SMTP de ton fournisseur (ex: Gmail)
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')  # Remplace par ton adresse e-mail
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')  # Remplace par ton mot de passe (ou utilise un App Password si Gmail)
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER